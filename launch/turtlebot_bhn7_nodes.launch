<?xml version="1.0"?>
<!-- ROSPlan turtlebot BHN7 -->
<launch>
	<arg name="waypoint_file" 		  default="$(find kcl_turtlebot)/maps/waypoints_floor_bhn7.txt" />
	<arg name="action_feedback_topic" default="/rosplan_plan_dispatcher/action_feedback" />
	<arg name="action_dispatch_topic" default="/rosplan_plan_dispatcher/action_dispatch" />
	<arg name="knowledge_base" 		  default="rosplan_knowledge_base" />


	<arg name="data_path"             default="$(find rosplan_demos)/common/" />

	<node name="initial_setup" pkg="kcl_turtlebot" type="initial_setup.py" respawn="false" output="screen" />
	<!--<node name="turtlebot_sensing" pkg="kcl_turtlebot" type="turtlebot_sensing" respawn="false" output="screen" />-->
	<node name="rosplan_sensing_interface" pkg="rosplan_sensing_interface" type="sensing_interface.py" respawn="false" output="screen">
   		<rosparam command="load" file="$(find rosplan_sensing_interface)/example.yaml" />
	</node>

    <node name="rosplan_roadmap_server" pkg="rosplan_interface_mapping" type="rpsimplemapServer" respawn="false" output="screen">
    	<param name="waypoint_file"   value="$(arg waypoint_file)" />
    	<param name="data_path" 	  value="$(arg data_path)" />
    	<param name="knowledge_base"  value="$(arg knowledge_base)" />
    </node>

    <node name="rosplan_localiser_interface" pkg="rosplan_interface_turtlebot2" type="rplocaliser" respawn="false" output="screen">
    	<param name="action_feedback_topic" value="$(arg action_feedback_topic)" />
    	<param name="action_dispatch_topic" value="$(arg action_dispatch_topic)" />
    	<param name="waypoint_file" value="$(arg waypoint_file)" />
    	<remap from="/kcl_rosplan/update_knowledge_base" to="/rosplan_knowledge_base/update"/>
    </node>
    
    <node name="rosplan_docker_interface" pkg="rosplan_interface_turtlebot2" type="rpdocker" respawn="false" output="screen">
    	<param name="action_feedback_topic" value="$(arg action_feedback_topic)" />
    	<param name="action_dispatch_topic" value="$(arg action_dispatch_topic)" />
    	<remap from="/kcl_rosplan/update_knowledge_base" to="/rosplan_knowledge_base/update"/>
    </node>

    <node name="rosplan_asker_interface" pkg="rosplan_interface_turtlebot2" type="rpasker" respawn="false" output="screen">
    	<param name="action_feedback_topic" value="$(arg action_feedback_topic)" />
    	<param name="action_dispatch_topic" value="$(arg action_dispatch_topic)" />
    	<remap from="/kcl_rosplan/update_knowledge_base" to="/rosplan_knowledge_base/update"/>
    </node>

    <!--<node name="rosplan_talker_interface" pkg="rosplan_interface_turtlebot2" type="rptalker" respawn="false" output="screen"> 
    	<param name="action_feedback_topic" value="$(arg action_feedback_topic)" />
    </node>-->
    
    <node name="rosplan_movebase_interface" pkg="rosplan_interface_movebase" type="rpmovebase" respawn="false" output="screen">
    	<param name="action_feedback_topic" value="$(arg action_feedback_topic)" />
    	<param name="action_dispatch_topic" value="$(arg action_dispatch_topic)" />
    	<param name="knowledge_base" 		value="$(arg knowledge_base)" />
    	<param name="pddl_action_name"		value="goto_waypoint" />
	</node>

	<!--<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="wait_load" />
		<arg name="action_duration" value="15" />
	</include>-->

    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="wait_unload" />
		<arg name="action_duration" value="5" />
	</include>
</launch>
